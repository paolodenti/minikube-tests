apiVersion: v1
kind: Secret
metadata:
    name: "db-secret"
    namespace: {{.Values.namespace}}
type: Opaque
data:
    # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "db-secret") | default dict }}
    {{- $secretData := (get $secretObj "data") | default dict }}
    # set $jwtSecret to existing secret data or generate a random one when not exists
    {{- $dbUsername := (get $secretData "db-username") | default (randAlphaNum 32 | b64enc) }}
    {{- $dbPassword := (get $secretData "db-password") | default (randAlphaNum 32 | b64enc) }}
    db-username: {{ $dbUsername | quote }}
    db-password: {{ $dbPassword | quote }}